on:
  push: 
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - run: |
          cp .env.example .env
          sed -i 's/DB_HOST=/DB_HOST=${{ secrets.PROD_DB_HOST }}/g' .env
          sed -i 's/DB_PORT=/DB_PORT=${{ secrets.PROD_DB_PORT }}/g' .env
          sed -i 's/DB_DATABASE=/DB_DATABASE=${{ secrets.PROD_DB_DATABASE }}/g' .env
          sed -i 's/DB_USERNAME=/DB_USERNAME=${{ secrets.PROD_DB_USERNAME }}/g' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}/g' .env
          sed -i 's/ADMIN_DOMAIN=/ADMIN_DOMAIN=${{ secrets.PROD_ADMIN_DOMAIN }}/g' .env
          sed -i 's/MAIL_HOST=/MAIL_HOST=${{ secrets.PROD_MAIL_HOST }}/g' .env
          sed -i 's/MAIL_PORT=/MAIL_PORT=${{ secrets.PROD_MAIL_PORT }}/g' .env
          sed -i 's/MAIL_USERNAME=/MAIL_USERNAME=${{ secrets.PROD_MAIL_USERNAME }}/g' .env
          sed -i 's/MAIL_PASSWORD=/MAIL_PASSWORD="${{ secrets.PROD_MAIL_PASSWORD }}"/g' .env
          sed -i 's/TURBOSMS_API_KEY=/TURBOSMS_API_KEY="${{ secrets.PROD_TURBOSMS_API_KEY }}"/g' .env
          sed -i 's/GOOGLE_MAPS_KEY=/GOOGLE_MAPS_KEY="${{ secrets.PROD_GOOGLE_MAPS_KEY }}"/g' .env
          sed -i 's/MAPON_API_KEY=/MAPON_API_KEY="${{ secrets.PROD_MAPON_API_KEY }}"/g' .env
          sed -i 's/PHONET_DOMAIN=/PHONET_DOMAIN="${{ secrets.PROD_PHONET_DOMAIN }}"/g' .env
          sed -i 's/PHONET_API_KEY=/PHONET_API_KEY="${{ secrets.PROD_PHONET_API_KEY }}"/g' .env
          sed -i 's/TG_BOT_USERNAME=/TG_BOT_USERNAME="${{ secrets.PROD_TG_BOT_USERNAME }}"/g' .env
          sed -i 's/TG_BOT_TOKEN=/TG_BOT_TOKEN="${{ secrets.PROD_TG_BOT_TOKEN }}"/g' .env
          sed -i 's|TG_BOT_WEBHOOK=|TG_BOT_WEBHOOK="${{ secrets.PROD_TG_BOT_WEBHOOK }}"|g' .env
          
      - run: php artisan key:generate

      - uses: actions/setup-node@v2
        with:
          node-version: '18'

      - run: |
          npm install
          npm run build
          rm -rf node_modules

      - uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          port: 22
          source: './'
          target: '/var/www/tyktyk/data/www/tyk-tyk.biz'

      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          port: 22
          script: |
              cd /var/www/tyktyk/data/www/tyk-tyk.biz
              chown -R tyktyk:tyktyk .
              find . -type d -exec chmod 755 {} \;
              chmod -R 775 storage bootstrap/cache
              find . -type f -exec chmod 644 {} \;
              php-8.2 artisan migrate --force
              php-8.2 artisan storage:link
              php-8.2 artisan optimize:clear
              php-8.2 artisan config:cache
              php-8.2 artisan event:cache
              php-8.2 artisan route:cache
              php-8.2 artisan view:cache